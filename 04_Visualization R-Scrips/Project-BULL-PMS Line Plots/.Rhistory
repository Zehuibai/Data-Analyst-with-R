x = species,
y = bill_length_mm
)
plt +
# Add labels and title
labs(
x = "Penguins Species",
y = "Bill Length",
title = "Distribution of bill length across penguins species"
) +
# Customizations
theme(
# This is the new default font in the plot
text = element_text(family = "Roboto", size = 8, color = "black"),
plot.title = element_text(
family = "Lobster Two",
size = 20,
face = "bold",
color = "#2a475e"
),
# Statistical annotations below the main title
plot.subtitle = element_text(
family = "Roboto",
size = 15,
face = "bold",
color="#1b2838"
),
plot.title.position = "plot", # slightly different from default
axis.text = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12)
)
plt +
# Add labels and title
labs(
x = "Penguins Species",
y = "Bill Length",
title = "Distribution of bill length across penguins species"
) +
# Customizations
theme(
# This is the new default font in the plot
text = element_text(family = "Roboto", size = 8, color = "black"),
plot.title = element_text(
family = "Lobster Two",
size = 20,
face = "bold",
color = "#2a475e"
),
# Statistical annotations below the main title
plot.subtitle = element_text(
family = "Roboto",
size = 15,
face = "bold",
color="#1b2838"
),
plot.title.position = "plot", # slightly different from default
axis.text = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12),
axis.ticks = element_blank(),
axis.line = element_line(colour = "grey50"),
panel.grid = element_line(color = "#b4aea9"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype = "dashed"),
panel.background = element_rect(fill = "#fbf9f4", color = "#fbf9f4"),
plot.background = element_rect(fill = "#fbf9f4", color = "#fbf9f4")
)
#create forest plot
ggplot(data=df, aes(y=index, x=effect, xmin=lower, xmax=upper)) +
geom_point() +
geom_errorbarh(height=.1) +
scale_y_continuous(breaks=1:nrow(df), labels=df$study) +
labs(title='Effect Size by Study', x='Effect Size', y = 'Study') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_minimal()
## create forest plot
ggplot(data=Forest.df,
aes(y=index, x=effect, xmin=lower, xmax=upper)) +
geom_point() +
geom_errorbarh(height=.1) +
scale_y_continuous(breaks=1:nrow(df), labels=df$study) +
labs(title='Effect Size by Study', x='Effect Size', y = 'Study') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_minimal()
Forest.df <- data.frame(study=c('S1', 'S2', 'S3', 'S4', 'S5', 'S6', 'S7'),
index=1:7,
effect=c(-.4, -.25, -.1, .1, .15, .2, .3),
lower=c(-.43, -.29, -.17, -.02, .04, .17, .27),
upper=c(-.37, -.21, -.03, .22, .24, .23, .33))
## create forest plot
ggplot(data=Forest.df,
aes(y=index, x=effect, xmin=lower, xmax=upper)) +
geom_point() +
geom_errorbarh(height=.1) +
scale_y_continuous(breaks=1:nrow(df), labels=df$study) +
labs(title='Effect Size by Study', x='Effect Size', y = 'Study') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_minimal()
ggplot(data=Forest.df,
aes(y=index, x=effect, xmin=lower, xmax=upper))
## create forest plot
ggplot(data=Forest.df,
aes(y=index, x=effect, xmin=lower, xmax=upper)) +
geom_point() +
geom_errorbarh(height=.1) +
scale_y_continuous(breaks=1:nrow(Forest.df), labels=study) +
labs(title='Effect Size by Study', x='Effect Size', y = 'Study') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_minimal()
## create forest plot
ggplot(data=Forest.df,
aes(y=index, x=effect, xmin=lower, xmax=upper)) +
geom_point() +
geom_errorbarh(height=.1) +
scale_y_continuous(breaks=1:nrow(Forest.df), labels=$Forest.dfstudy) +
labs(title='Effect Size by Study', x='Effect Size', y = 'Study') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_minimal()
## create forest plot
ggplot(data=Forest.df,
aes(y=index, x=effect, xmin=lower, xmax=upper)) +
geom_point() +
geom_errorbarh(height=.1) +
scale_y_continuous(breaks=1:nrow(Forest.df), labels=Forest.df$study) +
labs(title='Effect Size by Study', x='Effect Size', y = 'Study') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_minimal()
## create forest plot
ggplot(data=Forest.df,
aes(y=index, x=effect, xmin=lower, xmax=upper)) +
geom_point() +
geom_errorbarh(height=.1) +
scale_y_continuous(breaks=1:nrow(Forest.df), labels=Forest.df$study) +
labs(title='Effect Size by Study', x='Effect Size', y = 'Study') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_classic()
?geom_text
## create forest plot
ggplot(data=Forest.df,
aes(y=index, x=effect, xmin=lower, xmax=upper,label=as.character(effect))) +
geom_label() +
geom_errorbarh(height=.1) +
scale_y_continuous(breaks=1:nrow(Forest.df), labels=Forest.df$study) +
labs(title='Effect Size by Study',
x='Effect Size',
y = 'Study') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_classic()
## create forest plot
ggplot(data=Forest.df,
aes(y=index, x=effect, xmin=lower, xmax=upper,
label=as.character(effect))) +
geom_label(vjust=0.5) +
geom_errorbarh(height=.1) +
scale_y_continuous(breaks=1:nrow(Forest.df), labels=Forest.df$study) +
labs(title='Effect Size by Study',
x='Effect Size',
y = 'Study') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_classic()
## create forest plot
ggplot(data=Forest.df,
aes(y=index, x=effect, xmin=lower, xmax=upper,
label=as.character(effect))) +
geom_label(vjust=-5.5) +
geom_errorbarh(height=.1) +
scale_y_continuous(breaks=1:nrow(Forest.df), labels=Forest.df$study) +
labs(title='Effect Size by Study',
x='Effect Size',
y = 'Study') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_classic()
## create forest plot
ggplot(data=Forest.df,
aes(y=index, x=effect, xmin=lower, xmax=upper,
label=as.character(effect))) +
geom_label(vjust=-1.5) +
geom_errorbarh(height=.1) +
scale_y_continuous(breaks=1:nrow(Forest.df), labels=Forest.df$study) +
labs(title='Effect Size by Study',
x='Effect Size',
y = 'Study') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_classic()
## create forest plot
ggplot(data=Forest.df,
aes(y=index, x=effect, xmin=lower, xmax=upper,
label=as.character(effect))) +
geom_label(vjust=-0.5) +
geom_errorbarh(height=.1) +
scale_y_continuous(breaks=1:nrow(Forest.df), labels=Forest.df$study) +
labs(title='Effect Size by Study',
x='Effect Size',
y = 'Study') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_classic()
## create forest plot
ggplot(data=Forest.df,
aes(y=index, x=effect, xmin=lower, xmax=upper,
label=as.character(effect))) +
geom_label(vjust=-0.2) +
geom_errorbarh(height=.1) +
scale_y_continuous(breaks=1:nrow(Forest.df), labels=Forest.df$study) +
labs(title='Effect Size by Study',
x='Effect Size',
y = 'Study') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_classic()
## create forest plot
ggplot(data=Forest.df,
aes(y=index, x=effect, xmin=lower, xmax=upper,
label=as.character(effect))) +
geom_label(vjust=-0.1) +
geom_errorbarh(height=.1) +
scale_y_continuous(breaks=1:nrow(Forest.df), labels=Forest.df$study) +
labs(title='Effect Size by Study',
x='Effect Size',
y = 'Study') +
geom_vline(xintercept=0, color='black', linetype='dashed', alpha=.5) +
theme_classic()
library("meta")
data(Fleiss93)
head(Fleiss93)
metaresult<-metabin(event.e, n.e,data=Fleiss93,sm="RR",
studlab=paste(study, year),comb.random=FALSE)
metaresult<-metabin(event.e, n.e,event.c,n.c,data=Fleiss93,sm="RR",
studlab=paste(study, year),comb.random=FALSE)
metaresult<-metabin(event.e, n.e,event.c,n.c,data=Fleiss93,sm="RR",
studlab=paste(study, year),random=FALSE)
forest(metaresult)
?forest
489/698
26/698
183/698
?wilcox.test
83*30
105+42
147/141
knitr::opts_chunk$set(echo = TRUE)
# <!-- ---------------------------------------------------------------------- -->
# <!--                    1. load the required packages                       -->
# <!-- ---------------------------------------------------------------------- -->
packages<-c("tidyverse", "knitr")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
ipak(packages)
# <!-- ---------------------------------------------------------------------- -->
# <!-- ---------------------------------------------------------------------- -->
# <!--                        2. Basic system settings                        -->
# <!-- ---------------------------------------------------------------------- -->
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
Sys.setlocale("LC_ALL","English")
### get the path
# rstudioapi::getSourceEditorContext()$path
# dirname(rstudioapi::getSourceEditorContext()$path)
### set working directory
# getwd()
# setwd("c:/Users/zbai/Desktop")
# Sys.setlocale("LC_ALL","English")
### get the R Version
# paste(R.Version()[c("major", "minor")], collapse = ".")
### convert backslash to forward slash
# scan("clipboard",what="string")
# gsub('"', "", gsub("\\\\", "/", readClipboard()))
# <!-- ---------------------------------------------------------------------- -->
# <!-- ---------------------------------------------------------------------- -->
# <!--     3. Load the SASmarkdown package if the SAS output is required      -->
# <!-- ---------------------------------------------------------------------- -->
# library(SASmarkdown)
# ### Set SAS output
# ### Reset engine to R
# saspath <- "C:/SASHome/SASFoundation/9.4/sas.exe"
# sasopts <- "-nosplash -linesize 75"
# knitr::opts_chunk$set(engine="sashtml", engine.path=saspath,
#         engine.opts=sasopts, comment=NA)
#
# # run these commands to convince yourself that
# # within this knitr session the engine changed.
# knitr::opts_chunk$get()$engine
# knitr::opts_chunk$get()$engine.path
# knitr::opts_chunk$get()$engine.opts
# <!-- ---------------------------------------------------------------------- -->
# <!-- ---------------------------------------------------------------------- -->
# <!--                         4. Import the datasets                         -->
# <!-- ---------------------------------------------------------------------- -->
### Import csv data
# pfad <- "~/Desktop/SASUniversityEdition/myfolders/Daten"
# mydata1 <- read.csv(file.path(pfad, "yourcsv_data.csv"),
#                     sep=";",
#                     header=TRUE)
### Import xlsx data
# library(readxl)
# mydata2 <- read_excel("C:/Users/zbai/Documents/GitHub/R-Projects/SAS/Yimeng/results-text.xlsx")
### Import sas data
# library(sas7bdat)
# mydata3 <- read.sas7bdat("~/Desktop/SASUniversityEdition/myfolders/Daten/uis.sas7bdat")
# <!-- ---------------------------------------------------------------------- -->
copdat <- read.delim("clipboard")
View(copdat)
Data_D01 <- copdat
Data_D01$Visit <- factor(Data_D01$Visit,
levels = c("T1: Baseline","T2: Week 2", "T3: Week 4"))
Data_D01$Score <- factor(Data_D01$Score,
levels = c("Overall score", "Diarrhoea subscore",
"Indigestion subscore","Constipation subscore",
"Abdominal subscore","Reflux subscore"))
Data_D01$Indication <- as.factor(Data_D01$Indication)
str(Data_D01)
getwd()
saveRDS(Data_D01,file = "BULL-PMS_GSRS")
LinePlot <- function(Plot_Out){
Data_D01 %>% filter(Indication==Plot_Out) %>%
ggplot(aes(x=Visit, y=Mean, group=Score, color=Score)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.4,
position=position_dodge(0.05)) +
labs(title=paste("Line plot for indication:",Plot_Out), x="Visit", y = "Mean")+
theme_classic()
}
LinePlot(Plot_Out = "Irritable bowel syndrome (IBS)")
LinePlot <- function(Plot_Out){
Data_D01 %>% filter(Indication==Plot_Out) %>%
ggplot(aes(x=Visit, y=Mean, group=Score, color=Score)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.4,
position=position_dodge(0.00)) +
labs(title=paste("Line plot for indication:",Plot_Out), x="Visit", y = "Mean")+
theme_classic()
}
LinePlot(Plot_Out = "Irritable bowel syndrome (IBS)")
LinePlot(Plot_Out = "Functional dyspepsia")
Data_D01 %>% filter(Indication=="Stomach discomfort" |
Indication == "Bloating"|
Indication == "Flatulence"|
Indication == "Diarrhea"|
Indication == "Others") %>%
ggplot(aes(x=Visit, y=Mean, group=Score, color=Score)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.3,
position=position_dodge(0.00)) +
labs(title="Line plot by subindication of indication acute gastrointestinal problems", x="Visit", y = "Mean")+
theme_classic()
Data_D01 %>% filter(Indication=="Stomach discomfort" |
Indication == "Bloating"|
Indication == "Flatulence"|
Indication == "Diarrhea"|
Indication == "Others") %>%
ggplot(aes(x=Visit, y=Mean, group=Indication, color=Indication)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.3,
position=position_dodge(0.00)) +
labs(title="Line plot by subindication of indication acute gastrointestinal problems", x="Visit", y = "Mean")+
theme_classic()
Data_D01 %>% filter(Indication=="Stomach discomfort" |
Indication == "Bloating"|
Indication == "Flatulence"|
Indication == "Diarrhea"|
Indication == "Others") %>%
ggplot(aes(x=Visit, y=Mean, group=Indication, color=Indication)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.3,
position=position_dodge(0.00)) +
labs(title="Line plot by subindication of indication acute gastrointestinal problems", x="Visit", y = "Mean")+
theme_classic() +
scale_fill_manual("Subindication")
Data_D01 %>% filter(Indication=="Stomach discomfort" |
Indication == "Bloating"|
Indication == "Flatulence"|
Indication == "Diarrhea"|
Indication == "Others") %>%
ggplot(aes(x=Visit, y=Mean, group=Indication, color=Indication)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.3,
position=position_dodge(0.00)) +
labs(title="Line plot by subindication of indication acute gastrointestinal problems", x="Visit", y = "Mean")+
theme_classic() +
scale_fill_manual("Subindication")
Data_D01 %>% filter(Indication=="Stomach discomfort" |
Indication == "Bloating"|
Indication == "Flatulence"|
Indication == "Diarrhea"|
Indication == "Others") %>%
ggplot(aes(x=Visit, y=Mean, group=Indication, color=Indication)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.3,
position=position_dodge(0.00)) +
labs(title="Line plot by subindication of indication acute gastrointestinal problems", x="Visit", y = "Mean")+
theme_classic() +
scale_fill_manual("")
Data_D01 %>% filter(Indication=="Stomach discomfort" |
Indication == "Bloating"|
Indication == "Flatulence"|
Indication == "Diarrhea"|
Indication == "Others") %>%
ggplot(aes(x=Visit, y=Mean, group=Indication, color=Indication)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.3,
position=position_dodge(0.00)) +
labs(title="Line plot by subindication of indication acute gastrointestinal problems", x="Visit", y = "Mean")+
theme_classic() +
guides(fill=guide_legend(title="Subindication"))
Data_D01 %>% filter(Indication=="Stomach discomfort" |
Indication == "Bloating"|
Indication == "Flatulence"|
Indication == "Diarrhea"|
Indication == "Others") %>%
ggplot(aes(x=Visit, y=Mean, group=Indication, color=Indication)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.3,
position=position_dodge(0.00)) +
labs(title="Line plot by subindication of indication acute gastrointestinal problems", x="Visit", y = "Mean")+
theme_classic() +
guides(fill=guide_legend(title="Subindication"))
Data_D01 %>% filter(Indication=="Stomach discomfort" |
Indication == "Bloating"|
Indication == "Flatulence"|
Indication == "Diarrhea"|
Indication == "Others") %>%
ggplot(aes(x=Visit, y=Mean, group=Indication, color=Indication)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.3,
position=position_dodge(0.00)) +
labs(title="Line plot by subindication of indication acute gastrointestinal problems", x="Visit", y = "Mean")+
theme_classic() +
guides(fill=guide_legend(title="Subindication"))
Data_D01 %>% filter(Indication=="Stomach discomfort" |
Indication == "Bloating"|
Indication == "Flatulence"|
Indication == "Diarrhea"|
Indication == "Others") %>%
ggplot(aes(x=Visit, y=Mean, group=Indication, color=Indication)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.3,
position=position_dodge(0.00)) +
labs(title="Line plot by subindication of indication acute gastrointestinal problems", x="Visit", y = "Mean")+
theme_classic() +
scale_fill_manual(legend_title="Subindication")
Data_D01 %>% filter(Indication=="Stomach discomfort" |
Indication == "Bloating"|
Indication == "Flatulence"|
Indication == "Diarrhea"|
Indication == "Others") %>%
ggplot(aes(x=Visit, y=Mean, group=Indication, color=Indication)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.3,
position=position_dodge(0.00)) +
labs(title="Line plot by subindication of indication acute gastrointestinal problems", x="Visit", y = "Mean")+
theme_classic() +
scale_fill_manual("Subindication")
Data_D01 %>% filter(Indication=="Stomach discomfort" |
Indication == "Bloating"|
Indication == "Flatulence"|
Indication == "Diarrhea"|
Indication == "Others") %>%
ggplot(aes(x=Visit, y=Mean, group=Indication, color=Indication)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.3,
position=position_dodge(0.00)) +
labs(title="Line plot by subindication of indication acute gastrointestinal problems",
color ="Subindication",
x="Visit", y = "Mean")+
theme_classic()
LinePlot(Plot_Out = "Functional dyspepsia")
Data_D01 %>% filter(Indication=="Stomach discomfort" |
Indication == "Bloating"|
Indication == "Flatulence"|
Indication == "Diarrhea"|
Indication == "Others") %>%
ggplot(aes(x=Visit, y=Mean, group=Indication, color=Indication)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.3,
position=position_dodge(0.00)) +
labs(title="Line plot by subindication of indication acute gastrointestinal problems",
color ="Subindication",
x="Visit", y = "Mean")+
theme_classic()
LinePlot(Plot_Out = "Irritable bowel syndrome (IBS)")
LinePlot(Plot_Out = "Acute gastrointestinal problems")
LinePlot(Plot_Out = "Functional dyspepsia")
Data_D01 %>% filter(Indication=="Stomach discomfort" |
Indication == "Bloating"|
Indication == "Flatulence"|
Indication == "Diarrhea"|
Indication == "Others") %>%
ggplot(aes(x=Visit, y=Mean, group=Indication, color=Indication)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.3,
position=position_dodge(0.00)) +
labs(title="Line plot by subindication of indication acute gastrointestinal problems",
color ="Subindication",
x="Visit", y = "Mean")+
theme_classic()
